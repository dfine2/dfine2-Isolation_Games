{"version":3,"sources":["gameState.js","library.js","components/TurnActions.js","components/Scores.js","components/RoleButtons.js","components/Card.js","components/Board.js","components/App.js","index.js"],"names":["socket","openSocket","GameState","createContext","GameDispatch","initialState","key","cards","decksUsed","deck","blueCards","redCards","turn","useGameState","useContext","useGameDispatch","GameProvider","children","useState","localState","setLocalState","view","setView","on","gameState","Provider","value","flipCard","word","emit","startNewGame","endTurn","setDecksUsed","Container","styled","div","StyledButton","button","TurnActions","onClick","ScoreCard","color","Scores","RoleButton","isSelected","RoleButtons","StyledCard","card","revealed","Card","Grid","Board","words","length","i","push","TopBar","App","style","display","flexDirection","alignItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be329cf0.chunk.js","sourcesContent":["import openSocket from 'socket.io-client'\nimport React, { createContext, useState, useContext, useEffect } from 'react'\nimport { standard, veda } from './library'\n\n\n\n//yarn ngrok http -host-header=rewrite 3000\n\nconst endpoint = \"https://919734aac67c.ngrok.io\"\nconst socket = openSocket(endpoint)\n\n\nconst GameState = createContext()\nconst GameDispatch = createContext()\n\nconst initialState = {\n    key: [],\n    cards: [],\n    decksUsed: [standard, veda],\n    deck: [],\n    blueCards: 0,\n    redCards: 0,\n    turn: ''\n}\n\nconst GameProvider = ({ children }) => {\n    const [localState, setLocalState] = useState(initialState)\n    const [view, setView] = useState('agent')\n\n    socket.on('gameState', gameState => setLocalState(gameState))\n    socket.on('newGame', gameState => setLocalState(gameState))\n\n    const flipCard = (word) => {\n        socket.emit('flipCard', word)\n    }\n\n    const startNewGame = () => {\n        socket.emit('startNewGame')\n    }\n\n    const endTurn = () => {\n        socket.emit('endTurn')\n    }\n\n    const setDecksUsed = (decksUsed) => {\n        socket.emit('setDecksUsed', decksUsed)\n    }\n\n    return (\n        <GameState.Provider value={{ localState, view }}>\n            <GameDispatch.Provider value={{ flipCard, setView, startNewGame, endTurn, setDecksUsed }}>\n                {children}\n            </GameDispatch.Provider>\n        </GameState.Provider>\n    )\n}\n\nconst useGameState = () => {\n    const context = useContext(GameState)\n    return context\n}\n\nconst useGameDispatch = () => {\n    const context = useContext(GameDispatch)\n    return context\n}\n\nexport default GameProvider\n\nexport { useGameState, useGameDispatch }\n","const standard = [\n    'KNIFE', 'CHURCH', 'ORGAN', 'JAM', 'HORSESHOE', 'HONEY', 'MOUSE', 'WAR', 'PLATE', 'LINE', 'CONTRACT', 'MARCH', 'LIMOUSINE', 'AUSTRALIA', 'FOOT', 'NEW YORK', 'STADIUM', 'DRAGON', 'PASS', 'GREEN',\n    'KNIGHT', 'PIE', 'SLIP', 'TABLET', 'SHOP', 'NEEDLE', 'FIGHTER', 'WAKE', 'BOW', 'DEGREE', 'MERCURY', 'ROULETTE', 'BALL', 'DOCTOR', 'MATCH', 'IRON', 'OLIVE', 'GRACE', 'POINT', 'TUBE', 'COTTON', 'FISH', 'DATE',\n    'DRILL', 'FRANCE', 'BLOCK', 'NET', 'MOON', 'CROSS', 'SEAL', 'DIAMOND', 'WHALE', 'TIE', 'TABLE', 'COURT', 'SPRING', 'CARD', 'HORN', 'HOOD', 'HEART', 'DUCK', 'RING', 'BAND', 'ROBIN', 'FIRE', 'BRIDGE', 'STAR', 'POOL', 'CALF',\n    'AIR', 'STRAW', 'SWITCH', 'CLOAK', 'BOARD', 'MEXICO', 'EYE', 'SHIP', 'DICE', 'GHOST', 'BOOT', 'SCALE', 'FALL', 'ROCK', 'LONDON', 'POLICE', 'LION', 'KID', 'WIND', 'LEPRECHAUN', 'NURSE', 'BELL', 'LEMON', 'TRIANGLE', 'CAP',\n    'LIGHT', 'BELT', 'POST', 'RAY', 'HOLE', 'BEAT', 'THEATER', 'EGYPT', 'MODEL', 'TOKYO', 'ROSE', 'CHANGE', 'ARM', 'BERMUDA', 'WATCH', 'LEAD', 'CHARGE', 'BEACH', 'PUPIL', 'PLOT', 'BARK', 'THIEF', 'PLATYPUS', 'STICK', 'EAGLE',\n    'GENIUS', 'TELESCOPE', 'CYCLE', 'NOVEL', 'PIPE', 'TURKEY', 'MINE', 'TIME', 'PRINCESS', 'IVORY', 'AMERICA', 'PIANO', 'SPOT', 'BOX', 'MOUNT', 'CHECK', 'QUEEN', 'TORCH', 'STATE', 'PLANE', 'ROME', 'MOLE', 'SHOE', 'CLUB', 'SINK',\n    'FLUTE', 'CARROT', 'TRAIN', 'FIELD', 'BERLIN', 'FACE', 'SPY', 'UNICORN', 'BEIJING', 'RACKET', 'PANTS', 'WALL', 'LINK', 'DANCE', 'SNOW', 'TRUNK', 'ROUND', 'INDIA', 'HOTEL', 'PARACHUTE', 'ATLANTIS', 'VACUUM', 'ENGLAND',\n    'SMUGGLER', 'POUND', 'SUB', 'KETCHUP', 'WITCH', 'GAME', 'WASHER', 'AFRICA', 'SCUBA DIVER', 'TAG', 'ICE', 'NIGHT', 'STRING', 'BUGLE', 'PART', 'TOWER', 'POISON', 'GROUND', 'NOTE', 'SPIDER', 'ANGEL', 'PENGUIN', 'ROOT',\n    'NUT', 'SOCK', 'HAND', 'SWING', 'TAIL', 'CRASH', 'LAWYER', 'SATELLITE', 'PIN', 'WASHINGTON', 'CZECH', 'BACK', 'MOUTH', 'TAP', 'WORM', 'ALPS', 'OPERA', 'PYRAMID', 'APPLE', 'POLE', 'DISEASE', 'PORT', 'CELL', 'COVER', 'KEY',\n    'ALIEN', 'PLASTIC', 'DWARF', 'WEB', 'FAN', 'AMBULANCE', 'DRESS', 'HOSPITAL', 'SATURN', 'STREAM', 'GLOVE', 'CENTAUR', 'SHADOW', 'WAVE', 'CAR', 'ENGINE', 'SHAKESPEARE', 'MICROSCOPE', 'JET', 'SUIT', 'CHOCOLATE',\n    'MUG', 'CONCERT', 'SCORPION', 'CANADA', 'EUROPE', 'SOUL', 'JACK', 'COPPER', 'KANGAROO', 'STRIKE', 'FENCE', 'CAPITAL', 'BOTTLE', 'FOREST', 'HELICOPTER', 'SNOWMAN', 'PILOT', 'CASINO', 'RULER', 'BOMB', 'LAB', 'CLIFF',\n    'BOOM', 'BANK', 'FORCE', 'TRACK', 'PHOENIX', 'DROP', 'BUCK', 'AGENT', 'ICE CREAM', 'RABBIT', 'VAN', 'VET', 'PRESS', 'SPINE', 'HAWK', 'BATTERY', 'DRAFT', 'HAM', 'SHARK', 'JUPITER', 'DAY', 'MILLIONAIRE', 'MAMMOTH', 'COMIC',\n    'HEAD', 'LITTER', 'SPELL', 'GRASS', 'LOCK', 'BRUSH', 'DEATH', 'STOCK', 'LASER', 'SKYSCRAPER', 'BED', 'CIRCLE', 'CRANE', 'TRIP', 'PALM', 'MOSCOW', 'TEACHER', 'PUMPKIN', 'THUMB', 'ANTARCTICA', 'OCTOPUS', 'WHIP', 'BEAR',\n    'GLASS', 'COOK', 'REVOLUTION', 'FLY', 'PIT', 'OIL', 'SUPERHERO', 'BOND', 'PAN', 'CAST', 'GAS', 'BUTTON', 'FILM', 'SCHOOL', 'SERVER', 'HIMALAYAS', 'CROWN', 'GREECE', 'SQUARE', 'DECK', 'BUFFALO', 'BOLT', 'CHINA', 'LOG', 'LOCH NESS',\n    'MISSILE', 'PASTE', 'EMBASSY', 'ROBOT', 'GERMANY', 'FORK', 'PISTOL', 'ROW', 'FIGURE', 'PARK', 'LUCK', 'AMAZON', 'HOOK', 'SPACE', 'NINJA', 'OLYMPUS', 'SCIENTIST', 'SPIKE', 'SLUG', 'COMPOUND', 'HOLLYWOOD', 'WELL', 'KIWI',\n    'CODE', 'PITCH', 'KING', 'PAPER', 'SOUND', 'BAR', 'FILE', 'BAT', 'MASS', 'COLD', 'CRICKET', 'CHICK', 'CENTER', 'CHEST', 'YARD', 'BILL', 'DINOSAUR', 'FAIR', 'SCREEN', 'SOLDIER', 'BERRY', 'NAIL', 'GIANT', 'HORSE', 'PIRATE', 'BUG', 'MINT',\n    'AZTEC', 'MAPLE', 'SHOT', 'CAT', 'CHAIR', 'WATER', 'GOLD', 'TICK', 'LAP', 'LIFE', 'UNDERTAKER', 'MAIL', 'ORANGE', 'TEMPLE', 'STAFF', 'MARBLE', 'DOG', 'CONDUCTOR', 'TOOTH', 'PLAY'\n]\n\n\nconst veda = ['QUESADILLA', \"ALBUQUERQUE\", \"SASQUATCH\", \"SILICON VALLEY\", \"NUCLEUS\", \"ALCHEMY\", \"APP\", \"SCIENCE\", \"SPACE\", \"RETRO\", \"MONITOR\", \"HOME\", \"PORTAL\", \"CIRCLE\", \"PARROT\", \"MARIO\",\n    \"LUIGI\", \"REVIEW\", \"ISSUE\", \"SPOTIFY\", \"SNACK\", \"LEARNING\", \"RICE\", \"BEANS\", \"MACHINE\", \"HARVESTER\", \"CHARLOTTE\", \"GOBLIN\", 'CANADA', 'VEGETARIAN', 'SOAP', 'TOBACCO', 'SCANDAL', 'NORMAL', 'AARDVARK',\n    'MAP', 'CAPTAIN', 'SWARM', 'GUILT', 'IGLOO', 'CABINET', 'JERK', 'WAGON', 'SURF', 'TIDE', 'CROWBAR', 'BATMAN', 'LEX LUTHOR', 'ADVANTAGE', 'TEMPER', 'FIT', 'POLITICS', 'FACT', 'FORCE', 'IDEA', 'DICTIONARY',\n    'PEOPLE', 'CHILD', 'WAY', 'WORLD', 'FAMILY', 'PROBLEM', 'CASE', 'CAT', 'BAT', 'BALL', 'HAT', 'HEAD', 'POTATO', 'FUR', 'GERM', 'CANDLE', 'SCENT', 'BANANA', 'VENT', 'WATER', 'LAKE', 'POND', 'OCEAN', 'CARPET', 'RUG', 'MAT',\n    'LIGHTER', 'PHONE', 'RINGTONE', 'MUSIC', 'COMPUTER', 'SMOG', 'CZAR', 'SPLATTER', 'FEVER', 'COUGH', 'GLOVE', 'TEMPERATURE', 'VENTILATOR', 'QUARANTINE',\n    'RANSOM', 'MODEL', 'PROBABILITY', 'CHIMPANZEE', 'PIMPLE', 'PULP', 'CAPYBARA', 'SLEEPWALKER', 'CHUPACABRA', 'CHLOROX', 'PIKACHU', 'HOPSCOTCH', 'LA CROIX', 'PLANKTON',\n    'BURP', 'METAPHOR', 'GORGE', 'WIMBLEDON', 'ALCATRAZ', 'CONTAINER', 'HIERARCHY', 'INCIDENT', 'HACKYSACK', 'ANTAGONIST', 'WOE', 'SANDBAG', 'MULLET', 'UTILITY', 'BLADDER', 'BLOOD', 'ZERO', 'SILENCE', 'DUST',\n    , 'LIZARD', 'STORM', 'STRANGER', 'DANGER', 'CLONE', 'ATHENA', 'ETIQUETTE', 'CLAIRVOYANT', 'TRUFFLE', 'PEASANT', 'TORRENT', 'CLEMENTINE', 'SUSPENDERS', 'MILESTONE', 'RUMBLE', 'STINT', 'LORAX',\n    'TICKLE', 'BALLOON', 'FATIGUE', 'VORTEX', 'RIBBIT', 'ELMO', 'WINERY', 'CLAN', 'DEODORANT', 'CHAPSTICK', 'SILT', 'TRICK', 'FRINGE', 'GLITTER', 'PHAROAH', 'INDIGO', 'QUIP', 'LIAR', 'CRAWDAD', 'EMT', 'SLIGHT', 'CASABLANCA',\n    'DOPE', 'INDIANA', 'IDIOT', 'ROUNDABOUT', 'TINCTURE', 'PERMIT', 'PACT', 'ANEMONE', 'YO-YO', 'SCRAPE', 'ADORNMENT', 'QUILT', 'YOGA', 'CLASP', 'ABACUS', 'MISDEMEANOR',\n    'CORAL', 'DELTA', 'IODINE', 'INSULT', 'ROADBLOCK', 'FLUKE', 'DAWN', 'XEROX', 'ALBACORE', 'HALIFAX', 'TOPOGRAPHY', 'STERNUM', 'FLOP', 'ANAGRAM', 'TENANT', 'POPSICLE', 'SLANDER', 'J LO', 'CYPRUS', 'ORB',\n    'LISTERINE', 'ALPACA', 'MUSHROOM', 'MAVERICK', 'QUOTE', 'COMFORT', 'RAGE', 'PISTON', 'GENUS', 'CEMENT', 'ALLIGATOR', 'CANVAS', 'DINGO', 'DETAIL', 'COUNCIL', 'MUMBLE', 'STAPHYLOCOCCUS', 'TUPAC',\n    'GODZILLA', 'CHEWBACCA', 'ARTICHOKE', , 'EMPEROR', 'TURKMENISTAN', 'PUFFERFISH', 'AEROSOL', 'LEOPARD', 'GOLLUM', 'EARPLUG', 'ACCIDENT', 'DJ', 'SHAKIRA', 'TOILET', 'MEASLES', 'TAPIR',\n    'IGUANA', 'DRUNKARD', 'BAGPIPES', 'GIRDLE', 'ARMOR', 'SOUTHWEST', 'LINT', 'LINGUINI', 'BAR MITZVAH', 'CHASE', 'PROPOSAL', 'PURPOSE', 'FURBY', 'SIREN', 'EVIL', 'LATTE', 'AMBIENCE', 'CHARACTER', 'TUNGSTEN', 'CANTELOUPE', 'NAPKIN',\n    'MAHJONG']\n\nconst generateLibrary = (selectedDecks) => {\n    const library = []\n    selectedDecks.forEach(deck => {\n        library.push(...deck)\n    })\n    return library\n}\n\n\n\nexport { generateLibrary, veda, standard }\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useGameDispatch} from '../gameState'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 150px 150px;\n`\nconst StyledButton = styled.button`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    font-size: 14px;\n    cursor: pointer;\n`\nconst TurnActions = () => {\n    const { startNewGame, endTurn } = useGameDispatch()\n    return(\n        <Container>\n            <StyledButton onClick={() => endTurn()}>End Turn</StyledButton>\n            <StyledButton onClick={() => startNewGame()}>New Game</StyledButton>\n        </Container>\n    )\n}\n\nexport default TurnActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useGameState} from '../gameState'\n\nconst Container = styled.div`\n    display: grid;\n    grid-template-columns: 150px 150px;\n\n`\nconst ScoreCard = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 50px;\n    padding-left: 24px;\n    background-color: ${({color})=> color};\n    color: white;\n    font-size: 16px;\n`\nconst Scores = ()=> {\n    const {localState} = useGameState()\n    const {blueCards, redCards} = localState\n\n  return (\n  <Container>\n      <ScoreCard color='red'>Red: {redCards}</ScoreCard>\n      <ScoreCard color='blue'>Blue: {blueCards}</ScoreCard>\n  </Container>\n   )\n  }\n\n\nexport default Scores\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useGameState, useGameDispatch} from '../gameState'\n\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 200px 200px 200px;\n`\nconst RoleButton = styled.button`\n    width: 100%;\n    color: ${({ isSelected }) => isSelected ? 'white' : 'black'};\n    background-color: ${({isSelected}) => isSelected ? 'lightslategrey' : 'silver'};\n    cursor: pointer;\n    font-size: 24px;\n    height: 90px;\n    border: ${({ isSelected }) => isSelected ? '4px inset lightslategrey' : '4px groove silver'};\n    outline: 0;\n    font-family: 'Chalkduster'\n`\nconst RoleButtons = () => {\n    const {view} = useGameState()\n    const {setView} = useGameDispatch()\n\n    return (\n        <Container>\n            <RoleButton  isSelected={view === 'agent'} onClick={() => setView('agent')}>Agent</RoleButton>\n            <RoleButton isSelected={view === 'spymaster'} onClick={() => setView('spymaster')}>Spymaster</RoleButton>\n            <RoleButton  isSelected={view === 'arbiter'} onClick={() => setView('arbiter')}>Arbiter</RoleButton>\n        </Container>\n    )\n}\n\nexport default RoleButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport {useGameState, useGameDispatch} from '../gameState'\n\nconst StyledCard = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-weight: 20;\ncursor: ${({view}) => view === 'arbiter' ? 'pointer' : 'default'};\ncolor: ${({ card, view }) => card.revealed ? 'white' : view === 'spymaster' ?  `${card.color}` : 'black'};\nbackground-color: ${({card}) => card.revealed ? card.color : `#e0c99b`};\nborder: ${({isSelected, card}) => isSelected ? `8px inset ${card.color}` : `2px solid black` };\n`\nconst Card = ({card}) => {\n    const {view} = useGameState()\n    const {flipCard} = useGameDispatch()\n\n    return(\n        <StyledCard\n        card={card}\n        view={view}\n            onClick={()=> (view === 'arbiter' && card.revealed === false) &&  flipCard(card.word)}\n        >\n        {card.word}\n        </StyledCard>\n\n    )\n\n}\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport Card from './Card'\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n\n`\nconst Grid = styled.div`\n    margin: 32px;\n    margin-top: 0px;\n    padding: 16px;\n    display: grid;\n    grid-template-rows: repeat(5, 100px);\n    grid-template-columns: repeat(5, 200px);\n    grid-gap: 15px;\n`\n\n\nconst Board = ({ cards }) => {\n    const words = []\n    if (cards.length > 0) {\n        for (let i = 0; i < 25; i++) {\n            words.push(<Card card={cards[i]} />)\n        }\n    }\n    return (\n        <Container>\n            <Grid>\n                {words}\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Board\n","import React from 'react';\nimport styled from 'styled-components'\nimport TurnActions from './TurnActions'\nimport Scores from './Scores'\nimport RoleButtons from './RoleButtons'\nimport Board from './Board'\n// import DeckOptions from './DeckOptions'\nimport { useGameState, useGameDispatch } from '../gameState'\n\n\n\n\nconst TopBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 92%;\n  margin: 40px 32px 8px 32px;\n  `\n\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\n\nconst App = () => {\n  const { localState } = useGameState()\n\n  const { cards, turn } = localState\n\n\n\n  return (\n    <Container>\n      <div style={{ display: 'flex', flexDirection: \"column\", alignItems: 'center' }}>\n        <TopBar>\n          <Scores />\n          <div style={{ color: turn }}>{turn}'s turn</div>\n          <TurnActions />\n        </TopBar>\n        {cards && < Board cards={cards} />}\n        <RoleButtons />\n        {/* <DeckOptions></DeckOptions> */}\n      </div>\n\n    </Container>\n  )\n\n}\n\n\n\nexport default App\n\n\n\n  //\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport GameProvider from './gameState'\n\nReactDOM.render(\n  <GameProvider>\n    <App/>\n  </GameProvider>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}